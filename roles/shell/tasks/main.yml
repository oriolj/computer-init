---
- name: Install Zsh
  package:
    name: zsh
    state: present
  become: "{{ ansible_os_family != 'Darwin' }}"

- name: Check if Oh My Zsh is installed
  stat:
    path: "{{ home_dir }}/.oh-my-zsh"
  register: oh_my_zsh_installed
  become: false

- name: Install Oh My Zsh
  shell: |
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  args:
    creates: "{{ home_dir }}/.oh-my-zsh"
  become: false
  when: not oh_my_zsh_installed.stat.exists

- name: Install Zsh plugins
  git:
    repo: "{{ item.repo }}"
    dest: "{{ home_dir }}/.oh-my-zsh/custom/plugins/{{ item.name }}"
    update: yes
  loop:
    - { name: 'zsh-autosuggestions', repo: 'https://github.com/zsh-users/zsh-autosuggestions' }
    - { name: 'zsh-syntax-highlighting', repo: 'https://github.com/zsh-users/zsh-syntax-highlighting' }
  become: false

- name: Install Powerlevel10k theme
  git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: "{{ home_dir }}/.oh-my-zsh/custom/themes/powerlevel10k"
    depth: 1
    update: yes
  become: false

- name: Install fzf
  package:
    name: fzf
    state: present
  become: "{{ ansible_os_family != 'Darwin' }}"
  ignore_errors: yes

- name: Install autojump from AUR (Arch)
  shell: yay -S --noconfirm autojump
  become: false
  when: ansible_os_family == 'Archlinux'
  register: autojump_install
  changed_when: "'Installing' in autojump_install.stdout"
  ignore_errors: yes

- name: Install autojump (non-Arch)
  package:
    name: autojump
    state: present
  become: yes
  when: ansible_os_family != 'Archlinux'
  ignore_errors: yes

- name: Deploy .zshrc configuration
  template:
    src: zshrc.j2
    dest: "{{ home_dir }}/.zshrc"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0644'
    backup: yes
  become: false

- name: Deploy shell aliases
  template:
    src: aliases.j2
    dest: "{{ home_dir }}/.aliases"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0644'
  become: false

- name: Deploy shell functions
  template:
    src: functions.j2
    dest: "{{ home_dir }}/.functions"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0644'
  become: false

- name: Check current shell
  shell: echo $SHELL
  register: current_shell
  changed_when: false
  become: false

- name: Set Zsh as default shell
  user:
    name: "{{ user }}"
    shell: "{{ default_shell }}"
  become: yes
  when: current_shell.stdout != default_shell