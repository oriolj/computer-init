---
- name: Install OpenSSH server
  package:
    name: "{{ ssh_package }}"
    state: present
  vars:
    ssh_package: "{{ 'openssh-server' if ansible_os_family != 'Darwin' else 'openssh' }}"
  become: "{{ ansible_os_family != 'Darwin' }}"
  when: ansible_os_family != 'Darwin'

- name: Generate SSH key for user
  openssh_keypair:
    path: "{{ home_dir }}/.ssh/id_{{ ssh_key_type }}"
    type: "{{ ssh_key_type }}"
    size: "{{ 4096 if ssh_key_type == 'rsa' else omit }}"
    comment: "{{ user }}@{{ ansible_hostname }}"
  become: false
  when: generate_ssh_key | default(true)

- name: Ensure .ssh directory permissions
  file:
    path: "{{ home_dir }}/.ssh"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0700'
  become: false

- name: Manage authorized SSH keys
  authorized_key:
    user: "{{ user }}"
    key: "{{ item.key }}"
    comment: "{{ item.comment | default(omit) }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ ssh_authorized_keys }}"
  when: ssh_authorized_keys is defined and ssh_authorized_keys | length > 0
  become: false

- name: Configure SSH daemon
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0644'
    backup: yes
    validate: '/usr/sbin/sshd -t -f %s'
  notify: restart sshd
  when: ansible_os_family != 'Darwin'

- name: Configure SSH client
  template:
    src: ssh_config.j2
    dest: "{{ home_dir }}/.ssh/config"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0644'
  become: false

- name: Start and enable SSH service
  systemd:
    name: "{{ ssh_service }}"
    state: started
    enabled: yes
  vars:
    ssh_service: "{{ 'ssh' if ansible_os_family == 'Debian' else 'sshd' }}"
  when: 
    - ansible_os_family != 'Darwin'
    - ansible_service_mgr == 'systemd'

- name: Configure SSH agent systemd user service
  template:
    src: ssh-agent.service.j2
    dest: "{{ home_dir }}/.config/systemd/user/ssh-agent.service"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0644'
  become: false
  when: ansible_service_mgr == 'systemd'

- name: Enable SSH agent service for user
  systemd:
    name: ssh-agent
    state: started
    enabled: yes
    scope: user
    daemon_reload: yes
  become: false
  when: ansible_service_mgr == 'systemd'

- name: Add SSH agent to shell profile
  blockinfile:
    path: "{{ home_dir }}/.zshrc"
    block: |
      # SSH Agent
      export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - SSH Agent"
    create: yes
  become: false